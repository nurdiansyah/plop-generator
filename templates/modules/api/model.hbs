import {
  z,
  Filter,
  IdSchema
} from "@deboxsoft/module-core";

export const {{ pascalCase model }}Input = z.object({
});
export const {{ pascalCase model }}UpdateInput = {{ pascalCase model }}Input.partial();
export const {{ pascalCase model }}DataInput = {{ pascalCase model }}Input;
export const {{ pascalCase model }}Data = {{ pascalCase model }}DataInput.extend({
  id: IdSchema
});
export const {{ pascalCase model }} = {{ pascalCase model }}Data

export type {{ pascalCase model }}Input = z.input<typeof {{ pascalCase model }}Input>;
export type {{ pascalCase model }}UpdateInput = z.input<typeof {{ pascalCase model }}UpdateInput>;
export type {{ pascalCase model }}DataInput = z.input<typeof {{ pascalCase model }}DataInput>;
export type {{ pascalCase model }}Data = z.output<typeof {{ pascalCase model }}Data>;
export type {{ pascalCase model }} = z.output<typeof {{ pascalCase model }}>;
export type {{ pascalCase model }}Filter = Filter<{{ pascalCase model }}DataInput>;
